/**
 * Returns on scroll the channel videos page
 * Autogenerated with http://json2ts.com/
 *
 * @example link:
 * https://www.youtube.com/c/StopGameRuGames/videos
 *
 * @example path to results:
 * */
export declare module FetchVideosResponse {

    export interface Info {
        st: number;
    }

    export interface Timing {
        info: Info;
    }

    export interface Param {
        key: string;
        value: string;
    }

    export interface ServiceTrackingParam {
        service: string;
        params: Param[];
    }

    export interface MainAppWebResponseContext {
        loggedOut: boolean;
    }

    export interface YtConfigData {
        visitorData: string;
    }

    export interface WebResponseContextExtensionData {
        ytConfigData: YtConfigData;
        hasDecorated: boolean;
    }

    export interface ResponseContext {
        serviceTrackingParams: ServiceTrackingParam[];
        maxAgeSeconds: number;
        mainAppWebResponseContext: MainAppWebResponseContext;
        webResponseContextExtensionData: WebResponseContextExtensionData;
    }

    export interface Thumbnail {
        url: string;
        width: number;
        height: number;
    }

    export interface Avatar {
        thumbnails: Thumbnail[];
    }

    export interface ChannelMetadataRenderer {
        title: string;
        description: string;
        rssUrl: string;
        externalId: string;
        keywords: string;
        ownerUrls: string[];
        avatar: Avatar;
        channelUrl: string;
        isFamilySafe: boolean;
        availableCountryCodes: string[];
        androidDeepLink: string;
        androidAppindexingLink: string;
        iosAppindexingLink: string;
        tabPath: string;
        vanityChannelUrl: string;
    }

    export interface Metadata {
        channelMetadataRenderer: ChannelMetadataRenderer;
    }

    export interface Thumbnail3 {
        url: string;
        width: number;
        height: number;
    }

    export interface Thumbnail2 {
        thumbnails: Thumbnail3[];
    }

    export interface LinkAlternate {
        hrefUrl: string;
    }

    export interface MicroformatDataRenderer {
        urlCanonical: string;
        title: string;
        description: string;
        thumbnail: Thumbnail2;
        siteName: string;
        appName: string;
        androidPackage: string;
        iosAppStoreId: string;
        iosAppArguments: string;
        ogType: string;
        urlApplinksWeb: string;
        urlApplinksIos: string;
        urlApplinksAndroid: string;
        urlTwitterIos: string;
        urlTwitterAndroid: string;
        twitterCardType: string;
        twitterSiteHandle: string;
        schemaDotOrgType: string;
        noindex: boolean;
        unlisted: boolean;
        familySafe: boolean;
        tags: string[];
        availableCountries: string[];
        linkAlternates: LinkAlternate[];
    }

    export interface Microformat {
        microformatDataRenderer: MicroformatDataRenderer;
    }

    export interface Thumbnail5 {
        url: string;
        width: number;
        height: number;
    }

    export interface Thumbnail4 {
        thumbnails: Thumbnail5[];
    }

    export interface Run {
        text: string;
    }

    export interface AccessibilityData {
        label: string;
    }

    export interface Accessibility {
        accessibilityData: AccessibilityData;
    }

    export interface Title {
        runs: Run[];
        accessibility: Accessibility;
    }

    export interface PublishedTimeText {
        simpleText: string;
    }

    export interface ViewCountText {
        simpleText: string;
    }

    export interface WebCommandMetadata {
        url: string;
        webPageType: string;
        rootVe: number;
    }

    export interface CommandMetadata {
        webCommandMetadata: WebCommandMetadata;
    }

    export interface WatchEndpoint {
        videoId: string;
    }

    export interface NavigationEndpoint {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata;
        watchEndpoint: WatchEndpoint;
    }

    export interface Icon {
        iconType: string;
    }

    export interface MetadataBadgeRenderer {
        icon: Icon;
        style: string;
        tooltip: string;
        trackingParams: string;
    }

    export interface OwnerBadge {
        metadataBadgeRenderer: MetadataBadgeRenderer;
    }

    export interface ShortViewCountText {
        simpleText: string;
    }

    export interface Run2 {
        text: string;
    }

    export interface Text {
        runs: Run2[];
    }

    export interface Icon2 {
        iconType: string;
    }

    export interface WebCommandMetadata2 {
        sendPost: boolean;
    }

    export interface CommandMetadata2 {
        webCommandMetadata: WebCommandMetadata2;
    }

    export interface WebCommandMetadata3 {
        sendPost: boolean;
        apiUrl: string;
    }

    export interface CommandMetadata3 {
        webCommandMetadata: WebCommandMetadata3;
    }

    export interface CreatePlaylistServiceEndpoint {
        videoIds: string[];
        params: string;
    }

    export interface OnCreateListCommand {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata3;
        createPlaylistServiceEndpoint: CreatePlaylistServiceEndpoint;
    }

    export interface AddToPlaylistCommand {
        openMiniplayer: boolean;
        videoId: string;
        listType: string;
        onCreateListCommand: OnCreateListCommand;
        videoIds: string[];
    }

    export interface Action {
        clickTrackingParams: string;
        addToPlaylistCommand: AddToPlaylistCommand;
    }

    export interface SignalServiceEndpoint {
        signal: string;
        actions: Action[];
    }

    export interface ServiceEndpoint {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata2;
        signalServiceEndpoint: SignalServiceEndpoint;
    }

    export interface MenuServiceItemRenderer {
        text: Text;
        icon: Icon2;
        serviceEndpoint: ServiceEndpoint;
        trackingParams: string;
    }

    export interface Item {
        menuServiceItemRenderer: MenuServiceItemRenderer;
    }

    export interface AccessibilityData2 {
        label: string;
    }

    export interface Accessibility2 {
        accessibilityData: AccessibilityData2;
    }

    export interface MenuRenderer {
        items: Item[];
        trackingParams: string;
        accessibility: Accessibility2;
    }

    export interface Menu {
        menuRenderer: MenuRenderer;
    }

    export interface AccessibilityData3 {
        label: string;
    }

    export interface Accessibility3 {
        accessibilityData: AccessibilityData3;
    }

    export interface Text2 {
        accessibility: Accessibility3;
        simpleText: string;
    }

    export interface ThumbnailOverlayTimeStatusRenderer {
        text: Text2;
        style: string;
    }

    export interface UntoggledIcon {
        iconType: string;
    }

    export interface ToggledIcon {
        iconType: string;
    }

    export interface WebCommandMetadata4 {
        sendPost: boolean;
        apiUrl: string;
    }

    export interface CommandMetadata4 {
        webCommandMetadata: WebCommandMetadata4;
    }

    export interface Action2 {
        addedVideoId: string;
        action: string;
    }

    export interface PlaylistEditEndpoint {
        playlistId: string;
        actions: Action2[];
    }

    export interface WebCommandMetadata5 {
        sendPost: boolean;
        apiUrl: string;
    }

    export interface CommandMetadata5 {
        webCommandMetadata: WebCommandMetadata5;
    }

    export interface CreatePlaylistServiceEndpoint2 {
        videoIds: string[];
        params: string;
    }

    export interface OnCreateListCommand2 {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata5;
        createPlaylistServiceEndpoint: CreatePlaylistServiceEndpoint2;
    }

    export interface AddToPlaylistCommand2 {
        openMiniplayer: boolean;
        videoId: string;
        listType: string;
        onCreateListCommand: OnCreateListCommand2;
        videoIds: string[];
    }

    export interface Action3 {
        clickTrackingParams: string;
        addToPlaylistCommand: AddToPlaylistCommand2;
    }

    export interface SignalServiceEndpoint2 {
        signal: string;
        actions: Action3[];
    }

    export interface UntoggledServiceEndpoint {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata4;
        playlistEditEndpoint: PlaylistEditEndpoint;
        signalServiceEndpoint: SignalServiceEndpoint2;
    }

    export interface WebCommandMetadata6 {
        sendPost: boolean;
        apiUrl: string;
    }

    export interface CommandMetadata6 {
        webCommandMetadata: WebCommandMetadata6;
    }

    export interface Action4 {
        action: string;
        removedVideoId: string;
    }

    export interface PlaylistEditEndpoint2 {
        playlistId: string;
        actions: Action4[];
    }

    export interface ToggledServiceEndpoint {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata6;
        playlistEditEndpoint: PlaylistEditEndpoint2;
    }

    export interface AccessibilityData4 {
        label: string;
    }

    export interface UntoggledAccessibility {
        accessibilityData: AccessibilityData4;
    }

    export interface AccessibilityData5 {
        label: string;
    }

    export interface ToggledAccessibility {
        accessibilityData: AccessibilityData5;
    }

    export interface ThumbnailOverlayToggleButtonRenderer {
        isToggled: boolean;
        untoggledIcon: UntoggledIcon;
        toggledIcon: ToggledIcon;
        untoggledTooltip: string;
        toggledTooltip: string;
        untoggledServiceEndpoint: UntoggledServiceEndpoint;
        toggledServiceEndpoint: ToggledServiceEndpoint;
        untoggledAccessibility: UntoggledAccessibility;
        toggledAccessibility: ToggledAccessibility;
        trackingParams: string;
    }

    export interface Run3 {
        text: string;
    }

    export interface Text3 {
        runs: Run3[];
    }

    export interface ThumbnailOverlayNowPlayingRenderer {
        text: Text3;
    }

    export interface ThumbnailOverlay {
        thumbnailOverlayTimeStatusRenderer: ThumbnailOverlayTimeStatusRenderer;
        thumbnailOverlayToggleButtonRenderer: ThumbnailOverlayToggleButtonRenderer;
        thumbnailOverlayNowPlayingRenderer: ThumbnailOverlayNowPlayingRenderer;
    }

    export interface GridVideoRenderer {
        videoId: string;
        thumbnail: Thumbnail4;
        title: Title;
        publishedTimeText: PublishedTimeText;
        viewCountText: ViewCountText;
        navigationEndpoint: NavigationEndpoint;
        ownerBadges: OwnerBadge[];
        trackingParams: string;
        shortViewCountText: ShortViewCountText;
        menu: Menu;
        thumbnailOverlays: ThumbnailOverlay[];
    }

    export interface WebCommandMetadata7 {
        sendPost: boolean;
        apiUrl: string;
    }

    export interface CommandMetadata7 {
        webCommandMetadata: WebCommandMetadata7;
    }

    export interface ContinuationCommand {
        token: string;
        request: string;
    }

    export interface ContinuationEndpoint {
        clickTrackingParams: string;
        commandMetadata: CommandMetadata7;
        continuationCommand: ContinuationCommand;
    }

    export interface ContinuationItemRenderer {
        trigger: string;
        continuationEndpoint: ContinuationEndpoint;
    }

    export interface ContinuationItem {
        gridVideoRenderer: GridVideoRenderer;
        continuationItemRenderer: ContinuationItemRenderer;
    }

    export interface AppendContinuationItemsAction {
        continuationItems: ContinuationItem[];
        targetId: string;
    }

    export interface OnResponseReceivedAction {
        clickTrackingParams: string;
        appendContinuationItemsAction: AppendContinuationItemsAction;
    }

    export interface Response {
        responseContext: ResponseContext;
        metadata: Metadata;
        trackingParams: string;
        microformat: Microformat;
        onResponseReceivedActions: OnResponseReceivedAction[];
    }

    export interface RootObject {
        page: string;
        timing: Timing;
        response: Response;
        xsrf_token: string;
        endpoint?: any;
    }

}

